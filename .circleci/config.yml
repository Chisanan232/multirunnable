version: 2

jobs:

  build_data:    # This is job about database which saving the testing data for ensure the features work finely without any issue.
    docker:    # it uses the docker executor
      - image: circleci/mysql:8.0.23    # specifically, a docker image with mysql 8.0.3.
    # Steps are a list of commands to run inside the docker container above.
    steps:
      - checkout    # this pulls code down from GitHub
      - run:
          name: Install MySQL CLI
          command: |
            sudo apt-get install default-mysql-client
      - run:
          name: Create database
          command: |
            mysql -h 127.0.0.1 -u user -ppassw0rd --execute="CREATE DATABASE tw_stock;"
      - run:
          name: Create table for saving testing data
          command: |
            mysql -h 127.0.0.1 -u user -ppassw0rd --execute="
                CREATE TABLE IF NOT EXISTS tw_stock.stock_data_2330 (
                                                               stock_date DATETIME NOT NULL,
                                                               trade_volume DECIMAL(12,4) NOT NULL,
                                                               turnover_price DECIMAL(16,4) NOT NULL,
                                                               opening_price DECIMAL(8,4) NOT NULL,
                                                               highest_price DECIMAL(8,4) NOT NULL,
                                                               lowest_price DECIMAL(8,4) NOT NULL,
                                                               closing_price DECIMAL(8,4) NOT NULL,
                                                               gross_spread DECIMAL(8,4) NOT NULL,
                                                               turnover_volume DECIMAL(12,4) NOT NULL,
                                                               PRIMARY KEY(stock_date)) DEFAULT CHARSET=utf8;"
      - run:
          name: Insert testing data
          command: |
            mysql -h 127.0.0.1 -u user -ppassw0rd --execute="
                INSERT INTO tw_stock.stock_data_2330 (stock_date, trade_volume, turnover_price, opening_price, highest_price, lowest_price, closing_price, gross_spread, turnover_volume)
                    VALUES ('0108-01-02 00:00:00' , 32900482 , 7276419230 ,226.5000 ,226.5000 , 219.0000, 219.5000 ,-6.00 , 12329);
            mysql -h 127.0.0.1 -u user -ppassw0rd --execute="
                INSERT INTO tw_stock.stock_data_2330 (stock_date, trade_volume, turnover_price, opening_price, highest_price, lowest_price, closing_price, gross_spread, turnover_volume)
                    VALUES ('0108-01-03 00:00:00' , 34615620 , 7459051790 ,214.0000 ,218.0000 , 214.0000 ,215.5000 ,-4.00 , 14549);
            mysql -h 127.0.0.1 -u user -ppassw0rd --execute="
                INSERT INTO tw_stock.stock_data_2330 (stock_date, trade_volume, turnover_price, opening_price, highest_price, lowest_price, closing_price, gross_spread, turnover_volume)
                    VALUES ('0108-01-04 00:00:00' , 67043521 ,13987136785 ,211.5000 ,211.5000 , 206.5000 ,208.0000 ,-7.50 , 28786);
            mysql -h 127.0.0.1 -u user -ppassw0rd --execute="
                INSERT INTO tw_stock.stock_data_2330 (stock_date, trade_volume, turnover_price, opening_price, highest_price, lowest_price, closing_price, gross_spread, turnover_volume)
                    VALUES ('0108-01-07 00:00:00' , 35695176 , 7591116569 ,212.0000 ,214.0000 , 211.0000 ,213.0000 ,+5.00 , 11224);
            mysql -h 127.0.0.1 -u user -ppassw0rd --execute="
                INSERT INTO tw_stock.stock_data_2330 (stock_date, trade_volume, turnover_price, opening_price, highest_price, lowest_price, closing_price, gross_spread, turnover_volume)
                    VALUES ('0108-01-08 00:00:00' , 23794481 , 5019703557 ,212.0000 ,212.5000 , 210.0000 ,211.0000 ,-2.00 , 9377);
            mysql -h 127.0.0.1 -u user -ppassw0rd --execute="
                INSERT INTO tw_stock.stock_data_2330 (stock_date, trade_volume, turnover_price, opening_price, highest_price, lowest_price, closing_price, gross_spread, turnover_volume)
                    VALUES ('0108-01-09 00:00:00' , 51255446 ,11006827093 ,212.0000 ,216.5000 , 211.0000 ,215.5000 ,+4.50 , 14098);"

  linux_python37:    # This is first job --- pytest task with Python 3.7.
    docker:    # it uses the docker executor
      - image: circleci/python:3.7    # specifically, a docker image with python 3.7
    # Steps are a list of commands to run inside the docker container above.
    steps:
      - checkout    # this pulls code down from GitHub
      - run: python --version
      - run: pip install -U pip
      - run: pip install -U pytest
      - run: pip install -U pytest-cov
      - run: pip install codecov
      - run: pip install pytest-rerunfailures
      - run: pip install -r dev-requirements.txt    # install package + test dependencies
      - run: pytest
      - run: codecov -t $CODECOV_TOKEN
#      - run: coveralls    # submit coverage to coveralls
      - run: codecov -t $CODECOV_TOKEN    # submit coverage to codecov

  linux_python38:    # This is first job --- pytest task with Python 3.8.
    docker:
      - image: circleci/python:3.8    # specifically, a docker image with python 3.8
    steps:
      - checkout
      - run: python --version
      - run: pip install -U pip
      - run: pip install -U pytest
      - run: pip install -U pytest-cov
      - run: pip install codecov
      - run: pip install pytest-rerunfailures
      - run: pip install -r dev-requirements.txt    # install package + test dependencies
      - run: pytest
      - run: codecov -t $CODECOV_TOKEN
#      - run: coveralls    # submit coverage to coveralls
      - run: codecov -t $CODECOV_TOKEN    # submit coverage to codecov


# Under the workflows: map, we can coordinate above jobs, defined above.
workflows:
  version: 2
  build_and_test: # this is the name of our workflow
    jobs: # and here we list the jobs we are going to run.
      # General work flow
#      - linux_python37
#      - linux_python38

      # Sequence work flow
      - build_data
      - linux_python37:
           requires:
             - build_data
      - linux_python38:
           requires:
             - build_data

